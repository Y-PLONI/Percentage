name: Build APPX Package

on:
  push:
    branches:
      - main # או שם הענף שבו אתה רוצה להפעיל את התהליך

jobs:
  build:
    runs-on: windows-latest

    steps:
      # שלב 1: בדיקת קוד המקור
      - name: Checkout code
        uses: actions/checkout@v4

      # שלב 2: הגדרת MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      # שלב 3: הגדרת Windows SDK
      - name: Install Windows SDK
        run: |
          choco install windows-sdk-10-version-19041 -y

      # שלב 4: קומפילציה של קובצי EXE ו-DLL
      - name: Build EXE
        run: msbuild.exe Percentage.sln /p:Configuration=Release

      # שלב 5: יצירת APPX
      - name: Create APPX package
        run: |
          mkdir Packaging\Output
          makeappx.exe pack /d Packaging /p Packaging\Output\BatteryPercentageIcon.appx

      # שלב 6: חתימה דיגיטלית
      - name: Sign APPX
        env:
          SIGN_CERTIFICATE: ${{ secrets.SIGN_CERTIFICATE }} # קובץ PFX כתוכן Base64
          SIGN_PASSWORD: ${{ secrets.SIGN_PASSWORD }} # סיסמת החתימה
        run: |
          echo "$SIGN_CERTIFICATE" | base64 -d > cert.pfx
          signtool sign /f cert.pfx /p "$SIGN_PASSWORD" /t http://timestamp.digicert.com Packaging\Output\BatteryPercentageIcon.appx

      # שלב 7: שמירת הקובץ כתוצאה של הפעולה
      - name: Upload APPX as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: BatteryPercentageIcon
          path: Packaging\Output\BatteryPercentageIcon.appx
